package views


templ EmailInput(isValidClass, val, feedback string) {
    <div class="col-md-6" id="emailInput">
            <label for="inputEmail" class="form-label">Email</label>
            <input type="email" class={ "form-control", isValidClass } name="email" id="inputEmail" value={ val }
            hx-post="/validate/email"
            hx-trigger="change"
            hx-target="#emailInput"
            hx-swap="outerHTML"
            required/>
            <div class="invalid-feedback" id="feedbackEmail">
                 { feedback }
            </div>
    </div>
}

templ PasswordInput(isValidClass, val, feedback string) {
    <div class="col-md-6" id="passwordInput">
        <label for="inputPassword" class="form-label">Password</label>
        <input type="password" class={ "form-control", isValidClass } name="password" id="inputPassword" value={ val }
        hx-post="/validate/password"
        hx-trigger="change"
        hx-target="#passwordInput"
        hx-swap="outerHTML"
        required/>
        <div class="invalid-feedback" id="feedbackPassword">
            { feedback }
        </div>
    </div>
}


templ RegistrationForm() {
    { children... }
    <form id="registerForm" class="row g-3 needs-validation"
    action="/register"
    method="POST"
    novalidate>
      @EmailInput("", "", "Invalid Email")
      @PasswordInput("", "", "Invalid Password")
      <div class="col-md-6">
        <label for="validationCustom01" class="form-label">First name</label>
        <input type="text" class="form-control" name="firstName" id="validationCustom01" value="" required/>
        <div class="invalid-feedback">
          Field cannot be empty
        </div>

      </div>
      <div class="col-md-6">
        <label for="validationCustom02" class="form-label">Last name</label>
        <input type="text" class="form-control" name="lastName" id="validationCustom02" value="" required/>
        <div class="invalid-feedback">
          Field cannot be empty
        </div>
      </div>
      <div class="col-md-6">
      <div class="form-check form-switch">
        <input class="form-check-input" name="isDoctor" type="checkbox" id="flexSwitchCheckDefault"/>
        <label class="form-check-label" for="flexSwitchCheckDefault">I am a Doctor</label>
      </div>
      </div>
      <div class="col-12">
        <button type="submit" class="btn btn-primary">Sign up</button>
      </div>
    </form>
    <script>
      (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
          form.addEventListener('submit', event => {
            const form = event.target;

            let flag = false;
            Array.from(form.elements).forEach(el => {
                if (el.classList.contains('is-invalid')) {
                   el.classList.add('border-danger')
                   flag = true
                }
            })

            if (!form.checkValidity() || flag) {
              event.preventDefault();
              event.stopPropagation();
            }

            form.classList.add('was-validated');
          }, false)
        })
      })()
    </script>
}

templ RegistrationFormBad(errs ...string) {
    @RegistrationForm() {
        <div>
            <ul>
            for _, err := range errs {
                <li> { err } </li>
            }
            </ul>
        </div>
    }
}

templ LoginForm() {
    { children... }
    <form id="loginForm" class="row g-3 needs-validation"
    action="/login"
    method="POST">
        <div class="col-md-12" id="emailInputLogin">
                <label for="inputEmailLogin" class="form-label">Email</label>
                <input type="email" class="form-control" name="email" id="inputEmailLogin" required/>
                <div class="invalid-feedback" id="feedbackEmail">
                     Invalid Email
                </div>
        </div>
        <div class="col-md-12" id="passwordInputLogin">
            <label for="inputPasswordLogin" class="form-label">Password</label>
            <input type="password" class="form-control" name="password" id="inputPasswordLogin" required/>
            <div class="invalid-feedback" id="feedbackPassword">
                Invalid Password
            </div>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-primary">Log in</button>
        </div>
    </form>
}

templ LoginFormUserDoesntExist() {
    @LoginForm() {
        <div class="alert alert-warning" role="alert">
          User for provided credentials doesn't exist. <a href="/register" class="alert-link">Sign up?</a>
        </div>
    }
}

templ LoginFormWrongPassword() {
    @LoginForm() {
        <div class="alert alert-danger" role="alert">
          Wrong Password! Try again.
        </div>
    }
}
